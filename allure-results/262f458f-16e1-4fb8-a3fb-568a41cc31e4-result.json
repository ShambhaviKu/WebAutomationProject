{"name": "Verify registration", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_INTERNET_DISCONNECTED\n  (Session info: chrome=124.0.6367.92)\nStacktrace:\n\tGetHandleVerifier [0x00007FF620F11502+60802]\n\t(No symbol) [0x00007FF620E8AC02]\n\t(No symbol) [0x00007FF620D47CE4]\n\t(No symbol) [0x00007FF620D405B3]\n\t(No symbol) [0x00007FF620D313E4]\n\t(No symbol) [0x00007FF620D32C14]\n\t(No symbol) [0x00007FF620D31711]\n\t(No symbol) [0x00007FF620D31049]\n\t(No symbol) [0x00007FF620D30D42]\n\t(No symbol) [0x00007FF620D2EBE4]\n\t(No symbol) [0x00007FF620D2F22C]\n\t(No symbol) [0x00007FF620D4A9F9]\n\t(No symbol) [0x00007FF620DDAB7E]\n\t(No symbol) [0x00007FF620DBAB7A]\n\t(No symbol) [0x00007FF620DDA224]\n\t(No symbol) [0x00007FF620DBA923]\n\t(No symbol) [0x00007FF620D88FEC]\n\t(No symbol) [0x00007FF620D89C21]\n\tGetHandleVerifier [0x00007FF62121411D+3217821]\n\tGetHandleVerifier [0x00007FF6212560B7+3488055]\n\tGetHandleVerifier [0x00007FF62124F03F+3459263]\n\tGetHandleVerifier [0x00007FF620FCB846+823494]\n\t(No symbol) [0x00007FF620E95F9F]\n\t(No symbol) [0x00007FF620E90EC4]\n\t(No symbol) [0x00007FF620E91052]\n\t(No symbol) [0x00007FF620E818A4]\n\tBaseThreadInitThunk [0x00007FFAB1BA257D+29]\n\tRtlUserThreadStart [0x00007FFAB3C8AA48+40]", "trace": "@pytest.mark.smoke\n    @allure.title(\"Verify registration\")\n    @allure.description(\"Verify successfull registration\")\n    @allure.testcase(\"TC#1 Registration\")\n    def test_kasturveda_reg_positive():\n        driver = webdriver.Chrome()\n>       driver.get(\"https://kasturveda.com/\")\n\nLive_projects\\test_kasturvedaRegistration.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:356: in get\n    self.execute(Command.GET, {\"url\": url})\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002E631B6A720>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_INTERNET_DISCONNECTED\\\\...07FF620E818A4]\\\\n\\\\tBaseThreadInitThunk [0x00007FFAB1BA257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFAB3C8AA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_INTERNET_DISCONNECTED\nE         (Session info: chrome=124.0.6367.92)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF620F11502+60802]\nE       \t(No symbol) [0x00007FF620E8AC02]\nE       \t(No symbol) [0x00007FF620D47CE4]\nE       \t(No symbol) [0x00007FF620D405B3]\nE       \t(No symbol) [0x00007FF620D313E4]\nE       \t(No symbol) [0x00007FF620D32C14]\nE       \t(No symbol) [0x00007FF620D31711]\nE       \t(No symbol) [0x00007FF620D31049]\nE       \t(No symbol) [0x00007FF620D30D42]\nE       \t(No symbol) [0x00007FF620D2EBE4]\nE       \t(No symbol) [0x00007FF620D2F22C]\nE       \t(No symbol) [0x00007FF620D4A9F9]\nE       \t(No symbol) [0x00007FF620DDAB7E]\nE       \t(No symbol) [0x00007FF620DBAB7A]\nE       \t(No symbol) [0x00007FF620DDA224]\nE       \t(No symbol) [0x00007FF620DBA923]\nE       \t(No symbol) [0x00007FF620D88FEC]\nE       \t(No symbol) [0x00007FF620D89C21]\nE       \tGetHandleVerifier [0x00007FF62121411D+3217821]\nE       \tGetHandleVerifier [0x00007FF6212560B7+3488055]\nE       \tGetHandleVerifier [0x00007FF62124F03F+3459263]\nE       \tGetHandleVerifier [0x00007FF620FCB846+823494]\nE       \t(No symbol) [0x00007FF620E95F9F]\nE       \t(No symbol) [0x00007FF620E90EC4]\nE       \t(No symbol) [0x00007FF620E91052]\nE       \t(No symbol) [0x00007FF620E818A4]\nE       \tBaseThreadInitThunk [0x00007FFAB1BA257D+29]\nE       \tRtlUserThreadStart [0x00007FFAB3C8AA48+40]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: WebDriverException"}, "description": "Verify successfull registration", "start": 1714646295968, "stop": 1714646297678, "uuid": "bfb36ed7-143c-428f-864f-805e3777e4f1", "historyId": "e401c8e15e4fc4a7dbfb0e3e199f10d2", "testCaseId": "e401c8e15e4fc4a7dbfb0e3e199f10d2", "fullName": "Live_projects.test_kasturvedaRegistration#test_kasturveda_reg_positive", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "Live_projects"}, {"name": "suite", "value": "test_kasturvedaRegistration"}, {"name": "host", "value": "LAPTOP-G6QKH92C"}, {"name": "thread", "value": "4840-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Live_projects.test_kasturvedaRegistration"}], "links": [{"type": "tms", "url": "TC#1 Registration", "name": "TC#1 Registration"}]}