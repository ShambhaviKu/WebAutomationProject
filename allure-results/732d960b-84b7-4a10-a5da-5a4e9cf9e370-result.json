{"name": "Verify login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@id='username']\"}\n  (Session info: chrome=124.0.6367.60); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF7387AF922+3045234]\n\t(No symbol) [0x00007FF738453652]\n\t(No symbol) [0x00007FF738317564]\n\t(No symbol) [0x00007FF738365F9D]\n\t(No symbol) [0x00007FF73836606C]\n\t(No symbol) [0x00007FF7383ABDD7]\n\t(No symbol) [0x00007FF738389DEF]\n\t(No symbol) [0x00007FF7383A91C4]\n\t(No symbol) [0x00007FF738389B53]\n\t(No symbol) [0x00007FF73835813C]\n\t(No symbol) [0x00007FF738358D71]\n\tGetHandleVerifier [0x00007FF7387DE89D+3237613]\n\tGetHandleVerifier [0x00007FF738820BA7+3508727]\n\tGetHandleVerifier [0x00007FF73881976F+3478975]\n\tGetHandleVerifier [0x00007FF73858F1C6+815126]\n\t(No symbol) [0x00007FF73845ED0F]\n\t(No symbol) [0x00007FF738459854]\n\t(No symbol) [0x00007FF7384599E2]\n\t(No symbol) [0x00007FF73844A574]\n\tBaseThreadInitThunk [0x00007FFA5BE0257D+29]\n\tRtlUserThreadStart [0x00007FFA5C18AA58+40]", "trace": "@pytest.mark.smoke\n    @allure.title(\"Verify login\")\n    @allure.testcase(\"#TC1 Verify Login\")\n    def test_iDriveLogin():\n        driver = webdriver.Chrome()\n        driver.get(\"https://www.idrive360.com/enterprise/login\")\n        driver.maximize_window()\n    \n        # <\n        # input\n        # _ngcontent-ytb-c4=\"\" autofocus=\"\"\n        # class=\"id-form-ctrl ng-pristine ng-valid ng-touched\"\n        # id=\"username\"\n        # name=\"username\"\n        # type=\"email\"\n        # >\n    \n        # Find element by XPATH\n    \n>       login_username = driver.find_element(By.XPATH, \"//input[@id='username']\")\n\nsrc\\19-04-2024\\test_Lab003.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000014084361E50>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF73844A574]\\\\n\\\\tBaseThreadInitThunk [0x00007FFA5BE0257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFA5C18AA58+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@id='username']\"}\nE         (Session info: chrome=124.0.6367.60); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7387AF922+3045234]\nE       \t(No symbol) [0x00007FF738453652]\nE       \t(No symbol) [0x00007FF738317564]\nE       \t(No symbol) [0x00007FF738365F9D]\nE       \t(No symbol) [0x00007FF73836606C]\nE       \t(No symbol) [0x00007FF7383ABDD7]\nE       \t(No symbol) [0x00007FF738389DEF]\nE       \t(No symbol) [0x00007FF7383A91C4]\nE       \t(No symbol) [0x00007FF738389B53]\nE       \t(No symbol) [0x00007FF73835813C]\nE       \t(No symbol) [0x00007FF738358D71]\nE       \tGetHandleVerifier [0x00007FF7387DE89D+3237613]\nE       \tGetHandleVerifier [0x00007FF738820BA7+3508727]\nE       \tGetHandleVerifier [0x00007FF73881976F+3478975]\nE       \tGetHandleVerifier [0x00007FF73858F1C6+815126]\nE       \t(No symbol) [0x00007FF73845ED0F]\nE       \t(No symbol) [0x00007FF738459854]\nE       \t(No symbol) [0x00007FF7384599E2]\nE       \t(No symbol) [0x00007FF73844A574]\nE       \tBaseThreadInitThunk [0x00007FFA5BE0257D+29]\nE       \tRtlUserThreadStart [0x00007FFA5C18AA58+40]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "start": 1713863116428, "stop": 1713863118990, "uuid": "14a17b64-4b01-4822-b50a-7abedda25c25", "historyId": "cdd497fc21971301e3d2de67ee3427db", "testCaseId": "cdd497fc21971301e3d2de67ee3427db", "fullName": "src.19-04-2024.test_Lab003#test_iDriveLogin", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "src.19-04-2024"}, {"name": "suite", "value": "test_Lab003"}, {"name": "host", "value": "LAPTOP-G6QKH92C"}, {"name": "thread", "value": "13196-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.19-04-2024.test_Lab003"}], "links": [{"type": "tms", "url": "#TC1 Verify Login", "name": "#TC1 Verify Login"}]}